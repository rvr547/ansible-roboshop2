- name: configuring shipping
  hosts: shipping
  become: yes
  tasks:
  - name: Install maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check if roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true

  - name: create roboshop user
    when: output.rc == 1
    ansible.builtin.user:
     name: roboshop
  
  - name: check if app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: out

  - name: create app directory if it doest not exist
    when: out.stat.exists == false
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download and Extract shipping
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: mvn clean package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename file name
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app
  
  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: demonrelod
    ansible.builtin.systemd:
      daemon-reload: true

  - name: Enable and start 
    ansible.builtin.service:
      name: shipping
      enabled: true
      state: started

  - name: Install myql
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load shipping data
    ansible.builtin.shell: mysql -h mysql.preprv.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

  - name: Enable and start 
    ansible.builtin.service:
      name: shipping
      state: restarted



